# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

version: '3'

networks:
  chainedbids:
    external: true

services:

  ca-people:
    image: hyperledger/fabric-ca
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca-people
      - FABRIC_CA_SERVER_TLS_ENABLED=true
      - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.people.chainedbids.uva.es-cert.pem
      - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/8864f2236a6ce97fea74de29392d8df25491b8f16ddf36154c128eb95102a0d9_sk
    ports:
      - "7054:7054"
    command: sh -c 'fabric-ca-server start --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.people.chainedbids.uva.es-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/8864f2236a6ce97fea74de29392d8df25491b8f16ddf36154c128eb95102a0d9_sk -b admin:adminpw -d'
    volumes:
      - ./crypto-config/peerOrganizations/people.chainedbids.uva.es/ca/:/etc/hyperledger/fabric-ca-server-config
    container_name: ca_peerPeople
    networks:
      chainedbids:
        aliases:
          - ca_peerPeople
    deploy:
      placement:
        constraints: [node.hostname == moby]

  ca-firms:
    image: hyperledger/fabric-ca
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca-firms
      - FABRIC_CA_SERVER_TLS_ENABLED=true
      - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.firms.chainedbids.uva.es-cert.pem
      - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/b4bcb4ab58de478a2041adab12e836fcca2bf000c3b587eca2a5720b374bf625_sk
    ports:
      - "8054:7054"
    command: sh -c 'fabric-ca-server start --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.firms.chainedbids.uva.es-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/b4bcb4ab58de478a2041adab12e836fcca2bf000c3b587eca2a5720b374bf625_sk -b admin:adminpw -d'
    volumes:
      - ./crypto-config/peerOrganizations/firms.chainedbids.uva.es/ca/:/etc/hyperledger/fabric-ca-server-config
    container_name: ca_peerFirms
    networks:
      chainedbids:
        aliases:
            - ca_peerFirms
    deploy:
      placement:
        constraints: [node.hostname == moby]

  orderer-chainedbids-uva-es:
    container_name: orderer.chainedbids.uva.es
    image: hyperledger/fabric-orderer
    environment:
      - ORDERER_GENERAL_LOGLEVEL=debug
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      # enabled TLS
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: orderer
    volumes:
    - ./channel-artifacts/genesis.block:/var/hyperledger/orderer/orderer.genesis.block
    - ./crypto-config/ordererOrganizations/chainedbids.uva.es/orderers/orderer.chainedbids.uva.es/msp:/var/hyperledger/orderer/msp
    - ./crypto-config/ordererOrganizations/chainedbids.uva.es/orderers/orderer.chainedbids.uva.es/tls/:/var/hyperledger/orderer/tls
    ports:
      - 7050:7050
    networks:
      chainedbids:
        aliases:
            - orderer.chainedbids.uva.es
    deploy:
      placement:
        constraints: [node.hostname == moby]

  couchdb0:
    container_name: couchdb0
    image: hyperledger/fabric-couchdb
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
    # for example map it to utilize Fauxton User Interface in dev environments.
    ports:
      - "5984:5984"
    networks:
      - chainedbids
    deploy:
      placement:
        constraints: [node.hostname == moby]

  couchdb1:
    container_name: couchdb1
    image: hyperledger/fabric-couchdb
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
    # for example map it to utilize Fauxton User Interface in dev environments.
    ports:
      - "6984:5984"
    networks:
      - chainedbids
    deploy:
      placement:
        constraints: [node.hostname == moby]

  couchdb2:
    container_name: couchdb2
    image: hyperledger/fabric-couchdb
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
    # for example map it to utilize Fauxton User Interface in dev environments.
    ports:
      - "7984:5984"
    networks:
      - chainedbids
    deploy:
      placement:
        constraints: [node.hostname == moby]

  couchdb3:
    container_name: couchdb3
    image: hyperledger/fabric-couchdb
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
    # for example map it to utilize Fauxton User Interface in dev environments.
    ports:
      - "8984:5984"
    networks:
      - chainedbids
    deploy:
      placement:
        constraints: [node.hostname == moby]

  couchdb4:
    container_name: couchdb4
    image: hyperledger/fabric-couchdb
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
    # for example map it to utilize Fauxton User Interface in dev environments.
    ports:
      - "9984:5984"
    networks:
      - chainedbids
    deploy:
      placement:
        constraints: [node.hostname == moby]

  peer0-people-chainedbids-uva-es:
    container_name: peer0.people.chainedbids.uva.es
    image: hyperledger/fabric-peer
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=chainedbids
      #- CORE_LOGGING_LEVEL=ERROR
      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_PEER_ID=peer0.people.chainedbids.uva.es
      - CORE_PEER_ADDRESS=peer0.people.chainedbids.uva.es:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.people.chainedbids.uva.es:7051
      - CORE_PEER_LOCALMSPID=PeopleMSP
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb0:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto-config/peerOrganizations/people.chainedbids.uva.es/peers/peer0.people.chainedbids.uva.es/msp:/etc/hyperledger/fabric/msp
        - ./crypto-config/peerOrganizations/people.chainedbids.uva.es/peers/peer0.people.chainedbids.uva.es/tls:/etc/hyperledger/fabric/tls
    ports:
      - 7051:7051
      - 7053:7053
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    networks:
      chainedbids:
        aliases:
            - peer0.people.chainedbids.uva.es
    deploy:
      placement:
        constraints: [node.hostname == moby]

  peer1-people-chainedbids-uva-es:
    container_name: peer1.people.chainedbids.uva.es
    image: hyperledger/fabric-peer
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=chainedbids
      #- CORE_LOGGING_LEVEL=ERROR
      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_PEER_ID=peer1.people.chainedbids.uva.es
      - CORE_PEER_ADDRESS=peer1.people.chainedbids.uva.es:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.people.chainedbids.uva.es:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.people.chainedbids.uva.es:7051
      - CORE_PEER_LOCALMSPID=PeopleMSP
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb1:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto-config/peerOrganizations/people.chainedbids.uva.es/peers/peer1.people.chainedbids.uva.es/msp:/etc/hyperledger/fabric/msp
        - ./crypto-config/peerOrganizations/people.chainedbids.uva.es/peers/peer1.people.chainedbids.uva.es/tls:/etc/hyperledger/fabric/tls
    ports:
      - 8051:7051
      - 8053:7053
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    networks:
      chainedbids:
        aliases:
            - peer1.people.chainedbids.uva.es
    deploy:
      placement:
        constraints: [node.hostname == moby]

  peer2-people-chainedbids-uva-es:
    container_name: peer2.people.chainedbids.uva.es
    image: hyperledger/fabric-peer
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=chainedbids
      #- CORE_LOGGING_LEVEL=ERROR
      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_PEER_ID=peer2.people.chainedbids.uva.es
      - CORE_PEER_ADDRESS=peer2.people.chainedbids.uva.es:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer2.people.chainedbids.uva.es:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.people.chainedbids.uva.es:7051
      - CORE_PEER_LOCALMSPID=PeopleMSP
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb2:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto-config/peerOrganizations/people.chainedbids.uva.es/peers/peer2.people.chainedbids.uva.es/msp:/etc/hyperledger/fabric/msp
        - ./crypto-config/peerOrganizations/people.chainedbids.uva.es/peers/peer2.people.chainedbids.uva.es/tls:/etc/hyperledger/fabric/tls
    ports:
      - 9051:7051
      - 9053:7053
    networks:
      chainedbids:
        aliases:
            - peer2.people.chainedbids.uva.es
    deploy:
      placement:
        constraints: [node.hostname == moby]

  peer0-firms-chainedbids-uva-es:
    container_name: peer0.firms.chainedbids.uva.es
    image: hyperledger/fabric-peer
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=chainedbids
      #- CORE_LOGGING_LEVEL=ERROR
      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_PEER_ID=peer0.firms.chainedbids.uva.es
      - CORE_PEER_ADDRESS=peer0.firms.chainedbids.uva.es:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.firms.chainedbids.uva.es:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.firms.chainedbids.uva.es:7051
      - CORE_PEER_LOCALMSPID=FirmsMSP
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb3:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto-config/peerOrganizations/firms.chainedbids.uva.es/peers/peer0.firms.chainedbids.uva.es/msp:/etc/hyperledger/fabric/msp
        - ./crypto-config/peerOrganizations/firms.chainedbids.uva.es/peers/peer0.firms.chainedbids.uva.es/tls:/etc/hyperledger/fabric/tls
    ports:
      - 10051:7051
      - 10053:7053
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    networks:
      chainedbids:
        aliases:
            - peer0.firms.chainedbids.uva.es
    deploy:
      placement:
        constraints: [node.hostname == moby]

  peer1-firms-chainedbids-uva-es:
    container_name: peer1.firms.chainedbids.uva.es
    image: hyperledger/fabric-peer
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=chainedbids
      #- CORE_LOGGING_LEVEL=ERROR
      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_PEER_ID=peer1.firms.chainedbids.uva.es
      - CORE_PEER_ADDRESS=peer1.firms.chainedbids.uva.es:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.firms.chainedbids.uva.es:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer1.firms.chainedbids.uva.es:7051
      - CORE_PEER_LOCALMSPID=FirmsMSP
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb4:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto-config/peerOrganizations/firms.chainedbids.uva.es/peers/peer1.firms.chainedbids.uva.es/msp:/etc/hyperledger/fabric/msp
        - ./crypto-config/peerOrganizations/firms.chainedbids.uva.es/peers/peer1.firms.chainedbids.uva.es/tls:/etc/hyperledger/fabric/tls
    ports:
      - 11051:7051
      - 11053:7053

    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    networks:
      chainedbids:
        aliases:
            - peer1.firms.chainedbids.uva.es
    deploy:
      placement:
        constraints: [node.hostname == moby]

  cli:
    container_name: cli
    image: hyperledger/fabric-tools
    tty: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_ID=cli
      - CORE_PEER_ADDRESS=peer0.people.chainedbids.uva.es:7051
      - CORE_PEER_LOCALMSPID=peopleMSP
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/people.chainedbids.uva.es/peers/peer0.people.chainedbids.uva.es/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/people.chainedbids.uva.es/peers/peer0.people.chainedbids.uva.es/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/people.chainedbids.uva.es/peers/peer0.people.chainedbids.uva.es/tls/ca.crt
      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/people.chainedbids.uva.es/users/Admin@people.chainedbids.uva.es/msp
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    volumes:
        - /var/run/:/host/var/run/
        - ./chaincode/:/opt/gopath/src/github.com/hyperledger/fabric/examples/chaincode/go
        - ./crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/
        - ./scripts:/opt/gopath/src/github.com/hyperledger/fabric/peer/scripts/
        - ./channel-artifacts:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts
    depends_on:
      - orderer.chainedbids.uva.es
      - peer0.people.chainedbids.uva.es
      - peer1.people.chainedbids.uva.es
      - peer2.people.chainedbids.uva.es
      - peer0.firms.chainedbids.uva.es
      - peer1.firms.chainedbids.uva.es
    networks:
      - chainedbids
    deploy:
      placement:
        constraints: [node.hostname == moby]

